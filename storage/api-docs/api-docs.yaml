openapi: 3.1.0

info:
  title: ERP API
  version: 1.0.0

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: Personal access token authorization
  parameters:
    user:
      in: path
      name: user
      description: User id or slug
      required: true
      schema:
        oneOf:
          - type: integer
          - type: string
      examples:
        id:
          summary: Id
          value: 1
        slug:
          summary: Slug
          value: 'me'
  schemas:
    user:
      type: object
      properties:
        id:
          type: integer
          example: 1
        login:
          type: string
          example: user
        role:
          type: string
          example: buyer
        superior_id:
          type: integer
          nullable: true
          example: 2
        created_at:
          type: string
          example: 2024-01-01 00:00:00
        updated_at:
          type: string
          example: 2024-01-01 00:00:00
  responses:
    '204':
      description: No Content
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Error message
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Error message
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Error message
    '422':
      description: Unprocessable Content
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Error message
              errors:
                type: object
                properties:
                  field_name:
                    type: array
                    items:
                      type: string
                      example: Error message

security:
 - bearerAuth: []

paths:
  /api/auth/sign-in:
    post:
      tags:
        - Auth
      summary: Sign in
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  maximum: 255
                  example: user
                password:
                  type: string
                  minimum: 8
                  maximum: 255
                  format: password
                  example: password
              required:
                - login
                - password
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/user'
                      token:
                        type: string
                        example: 1|fBb0ZnfxkHrd4t3hGt4LVFj9tTh84hzqVH1oZPP5914dcdd9
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
  /api/auth/sign-out:
    post:
      tags:
        - Auth
      summary: Sign out
      responses:
        '204':
          $ref: '#/components/responses/204'
        '401':
          $ref: '#/components/responses/401'
  /api/users:
    post:
      tags:
        - Users
      summary: Create User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  maximum: 255
                  example: user
                password:
                  type: string
                  minimum: 8
                  maximum: 255
                  format: password
                  example: password
                superior_id:
                  type: integer
                  example: 1
              required:
                - login
                - password
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/user'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
  /api/users/{user}:
    get:
      tags:
        - Users
      summary: Show User
      parameters:
        - $ref: '#/components/parameters/user'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/user'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
